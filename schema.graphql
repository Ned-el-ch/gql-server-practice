const { gql } = require('apollo-server');

exports.typeDefs = gql`

enum empluy {
  CONSUMER
  COACH
  EMPLOYEE
}

enum eventType {
  DEVICE_DATA_HAMGE
  ASYNC
}

interface Event {
  id: ID!
  name: String!
}

"""
Represents a user in the Global Asset Management Solution
"""

type user {
  id: String!
  username: String!
  consumer_type: consumerType!
}

"""
Define
"""

enum ConsumableType {
  """
  Heat not burn consumable
  """
  HEET
  """
  Liquid consumable
  """
  POD
}

enum Activation_Status {
    UNKNOWN
    ACTIVATED
    DEACTIAVTED
}

interface Asset {
  id: ID!
}

interface Tracking {

}

type Activation {
  """
  flag to specify iof activation is a requirement for a device
  """
  requiresActivation: Boolean
  """
  flag to specify the actual activation status of the device
  this should be set only when reuires_activation is set to true
  """
  activationStatus: ACTIVATION_STATUS
}

type Material {
  """
  Device Management attributes
  """
  description: String!
  group: String!
  modelNumber: String!
  brandFamily: String!
  color: String!
}

type Device implements Asset {
  serialNumber: String!
  codentifyID: String!
  activation: Activation!
  material: Material!
}

type Accessory implements Asset {
  serialNumber: String
  tracking: Tracking
}

type Consumable implements Asset {
  consumableType: ConsumableType!
  tracking: Tracking!
}

interface Asset {
  """
  SFDC Attributes
  """
  id: ID!
  """
  IOT Platform attributes
  """
}

interface Device {

}
`;